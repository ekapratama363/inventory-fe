{"version":3,"sources":["../node_modules/antd/es/locale/useLocale.js","../node_modules/antd/es/form/context.js","../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","pages/Auth/ForgotPassword.jsx"],"names":["useLocale","componentName","defaultLocale","fullLocale","React","LocaleContext","_a","locale","defaultLocaleData","localeFromContext","Object","assign","localeCode","exist","FormContext","labelAlign","vertical","itemRef","NoStyleItemContext","FormProvider","props","providerProps","omit","RcFormProvider","FormItemPrefixContext","prefixCls","FormItemInputContext","NoFormStyle","_ref","children","status","override","formItemInputContext","useContext","newFormItemInputContext","useMemo","newContext","isFormItemInput","hasFeedback","feedbackIcon","Provider","value","ArrowLeftOutlined","ref","AntdIcon","_objectSpread","icon","ArrowLeftOutlinedSvg","displayName","api","Api","Forgot","useForm","form","useState","errors","setErrors","isLoading","setIsLoading","email","formData","setFormData","className","style","backgroundColor","onFinish","resetPassword","then","response","data","history","push","success","message","catch","error","color","onChange","e","name","target","type","placeholder","size","block","htmlType","loading","onClick"],"mappings":"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","file":"static/js/29.262887e1.chunk.js","sourcesContent":["import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","import { FormProvider as RcFormProvider } from 'rc-field-form';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nexport const FormContext = /*#__PURE__*/React.createContext({\n  labelAlign: 'right',\n  vertical: false,\n  itemRef: () => {}\n});\nexport const NoStyleItemContext = /*#__PURE__*/React.createContext(null);\nexport const FormProvider = props => {\n  const providerProps = omit(props, ['prefixCls']);\n  return /*#__PURE__*/React.createElement(RcFormProvider, Object.assign({}, providerProps));\n};\nexport const FormItemPrefixContext = /*#__PURE__*/React.createContext({\n  prefixCls: ''\n});\nexport const FormItemInputContext = /*#__PURE__*/React.createContext({});\nexport const NoFormStyle = _ref => {\n  let {\n    children,\n    status,\n    override\n  } = _ref;\n  const formItemInputContext = useContext(FormItemInputContext);\n  const newFormItemInputContext = useMemo(() => {\n    const newContext = Object.assign({}, formItemInputContext);\n    if (override) {\n      delete newContext.isFormItemInput;\n    }\n    if (status) {\n      delete newContext.status;\n      delete newContext.hasFeedback;\n      delete newContext.feedbackIcon;\n    }\n    return newContext;\n  }, [status, override, formItemInputContext]);\n  return /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: newFormItemInputContext\n  }, children);\n};","// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\nexport default /*#__PURE__*/React.forwardRef(ArrowLeftOutlined);","import React, { useState } from 'react';\nimport \"./index.css\";\nimport { Form, Button } from 'antd';\nimport Api from '../../helpers/api';\nimport { message } from \"antd\";\n\nimport {\n    ArrowLeftOutlined\n} from '@ant-design/icons';\n\nconst api = new Api();\n\nconst Forgot = (props) => {\n\n    const [form] = Form.useForm();\n    const [errors, setErrors] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [formData, setFormData] = useState({ email: \"\" })\n\n    const handleInput = (e, name) => {\n        setFormData({ ...formData, [name]: e.target.value })\n    }\n\n    const onFinish = () => {\n        setIsLoading(true)\n        api.resetPassword(formData)\n            .then(response => {\n                const { data } = response\n                setIsLoading(false)\n                props.history.push('/login')\n                message.success(data.message);\n            })\n            .catch(error => {\n                setIsLoading(false)\n                if (error.response && error.response.data) {\n                    const { errors } = error.response.data\n                    setErrors(errors)\n                    message.error(error.response.data.message);\n                }\n            });\n    };\n\n    return (\n        <div className=\"d-lg-flex half\">\n            <div className=\"bg order-1 order-md-2 login-form-wrapper\" />\n            <div className=\"contents order-2 order-md-1\">\n                <div className=\"container\" style={{ backgroundColor: '#fff' }}>\n                    <div className=\"row align-items-center justify-content-center\">\n                        <div className=\"col-md-7\">\n                            <h3>Forgot Password</h3>\n                            <p className=\"mb-4\">Input your email below to get password reset link</p>\n\n                            <Form form={form} onFinish={onFinish}>\n                                <div className=\"form-group first last\">\n                                    <label>Email  <span style={{ color: 'red' }}>{errors && errors.email ? errors.email : null}</span></label>\n                                    <input\n                                        onChange={value => handleInput(value, 'email')}\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder=\"your-email@mail.com\" />\n                                </div>\n\n                                <Button className=\"form-button\"\n                                    size=\"large\"\n                                    block\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    loading={isLoading}>\n                                    Resset Password\n                                </Button>\n\n                                <Button\n                                    onClick={() => { props.history.push('/login') }}\n                                    className=\"form-button\"\n                                    icon={<ArrowLeftOutlined />}\n                                    size=\"large\" block>Back to Login</Button>\n                            </Form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Forgot;\n"],"sourceRoot":""}