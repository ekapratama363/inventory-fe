{"version":3,"sources":["helpers/dateFormat.js","pages/Stock/FormMaterialDetail.jsx","pages/Stock/TableSerialNumber.jsx","pages/Stock/Form.jsx"],"names":["timeStampsFormat","date","format","api","Api","FormMaterialDetail","props","useState","loading","setLoading","stock","setStock","useEffect","viewStock","id","match","params","then","response","data","catch","error","handleApiError","field","value","room","plant","name","material","material_code","description","classification","serial_number","uom","quantity_in_transit","minimum_stock","updated_by","fullname","email","updated_at","columns","title","dataIndex","width","dataSource","size","pagination","TabPane","TableSerialNumber","selectedRowKeys","setSelectedRowKeys","setData","setPagination","q","setQ","fetch","getStockDetailByStockId","current","current_page","total","pageSize","parseInt","per_page","handlePrintQr","map","item","push","fullUrl","process","join","window","open","rowSelection","onChange","hasSelected","length","defaultActiveKey","tab","key","direction","style","md","onClick","disabled","icon","QrcodeOutlined","Search","placeholder","onSearch","render","rowKey","record","paginate","sorter","pager","page","sort_field","sort_order","order","pageSizeOptions","showSizeChanger","showQuickJumper","showTotal","range","scroll","y","x","FormPage","gutter","xs","sm","lg","history","goBack","ArrowLeftOutlined"],"mappings":"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","file":"static/js/42.1066b3a0.chunk.js","sourcesContent":["import React from \"react\";\nimport Moment from \"react-moment\";\n\n/**\n *\n * @param {String} date String\n */\nexport default function timeStampsFormat(date) {\n  return <Moment format=\"YYYY-MM-DD HH:mm:ss\">{date}</Moment>;\n}\n","import React, { useState, useEffect } from 'react'\nimport { Table } from 'antd';\nimport Api from '../../helpers/api';\nimport handleApiError from '../../helpers/handleApiError';\nimport timeStampsFormat from '../../helpers/dateFormat';\n\nconst api = new Api();\n\nconst FormMaterialDetail = (props) => {\n\n    const [loading, setLoading] = useState(false)\n    const [stock, setStock] = useState(false)\n\n    useEffect(() => {\n        viewStock()\n    }, []);\n\n    const viewStock = () => {\n        setLoading(true)\n        const { id } = props.match.params\n        api.viewStock(id)\n            .then(response => {\n                setLoading(false)\n                setStock(response.data)\n            }).catch(error => {\n                handleApiError(error, props)\n            })\n    }\n\n    const columns = [\n        {\n            title: 'Field',\n            dataIndex: 'field',\n            width: 50\n        },\n        {\n            title: 'Value',\n            dataIndex: 'value',\n            width: 150\n        },\n    ];\n\n    const data = [\n        {\n            field: 'Plant',\n            value: stock.room && stock.room.plant ? stock.room.plant.name : '-'\n        },\n        {\n            field: 'Room',\n            value: stock.room ? stock.room.name : '-'\n        },\n        {\n            field: 'Material',\n            value: stock.material ? `${stock.material.material_code} - ${stock.material.description}` : '-'\n        },\n        {\n            field: 'Classification',\n            value: stock.material ? stock.material.classification.name : '-'\n        },\n        {\n            field: 'Require Serial Number?',\n            value: stock.material ? stock.material.serial_number ? 'Yes' : 'No' : '-'\n        },\n        {\n            field: 'UoM',\n            value: stock.material && stock.material.uom ? stock.material.uom.name : '-'\n        },\n        {\n            field: 'Ready Stock',\n            value: stock.stock\n        },\n        {\n            field: 'Quantity In Transait',\n            value: stock.quantity_in_transit\n        },\n        {\n            field: 'Minimum Stock',\n            value: stock.minimum_stock\n        },\n        {\n            field: 'Updated by',\n            value: stock.updated_by ? `${stock.updated_by.fullname} - ${stock.updated_by.email}` : '-'\n        },\n        {\n            field: 'Updated at',\n            value: timeStampsFormat(stock.updated_at)\n        },\n    ];\n\n    return (\n        <Table\n            loading={loading}\n            columns={columns}\n            dataSource={data}\n            size=\"small\"\n            pagination={false}\n        />\n    )\n}\n\nexport default FormMaterialDetail;","import React, { useState, useEffect } from 'react'\nimport { Table, Space, Button, Row, Col, Input, Tabs } from 'antd';\nimport Api from '../../helpers/api';\n\nimport {\n    QrcodeOutlined\n} from '@ant-design/icons';\nimport handleApiError from '../../helpers/handleApiError';\n\nconst { TabPane } = Tabs;\n\nconst api = new Api();\n\nconst TableSerialNumber = (props) => {\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [pagination, setPagination] = useState({})\n    const [q, setQ] = useState('')\n\n    useEffect(() => {\n        fetch()\n    }, [q])\n\n    const fetch = (params = {}) => {\n        setLoading(true)\n        const { id } = props.match.params\n\n        api.getStockDetailByStockId(id, { ...params, q })\n            .then(response => {\n                const data = response.data;\n\n                let pagination = {}\n\n                pagination.current = data.current_page\n                pagination.total = data.total;\n                pagination.pageSize = parseInt(data.per_page);\n\n                setData(data.data)\n                setPagination(pagination)\n                setLoading(false)\n            })\n            .catch(error => {\n                setLoading(false)\n                handleApiError(error, props)\n            })\n    }\n\n    const handlePrintQr = (size) => {\n        let id = []\n        selectedRowKeys.map(item => id.push(`id[]=${item}`))\n        id.push(`size=${size}`)\n\n        let apiUrl = process.env.REACT_APP_API_URL;\n        let fullUrl = `${apiUrl}/transaction/stock-detail/qrcode?${id.join('&')}`\n        window.open(fullUrl)\n    }\n\n    const searchData = (q) => {\n        setQ(q);\n    }\n\n    const handleTableChange = (paginate, sorter) => {\n        const pager = { ...pagination };\n        pager.current = paginate.current;\n\n        setPagination(pager)\n\n        fetch({\n            per_page: paginate.pageSize,\n            page: paginate.current,\n            sort_field: sorter.field,\n            sort_order: sorter.order === 'ascend' ? 'asc' : 'desc',\n        });\n    }\n\n    //on check table item\n    const onSelectChange = (selectedRowKeys) => {\n        setSelectedRowKeys(selectedRowKeys)\n    }\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const hasSelected = selectedRowKeys.length > 0;\n\n    const columns = [\n        {\n            title: 'Code',\n            dataIndex: 'code',\n            width: 100\n        },\n        // {\n        //     title: 'Serial Number',\n        //     dataIndex: 'serial_number',\n        //     width: 150\n        // },\n        {\n            title: 'Material',\n            dataIndex: 'stock',\n            width: 150,\n            render: (stock) => (\n                stock && stock ? `${stock.material.material_code} - ${stock.material.description}` : '-'\n            ),\n        },\n    ];\n\n    return (\n        <Tabs defaultActiveKey=\"1\" >\n            <TabPane tab=\"Ready Stock\" key=\"1\">\n                <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n                    <Row>\n                        <Col md={19}>\n                            <Space>\n                                <Button\n                                    onClick={() => handlePrintQr('m24')}\n                                    disabled={!hasSelected}\n                                    icon={<QrcodeOutlined />}\n                                >Qr Code 70x24MM</Button>\n\n                                <Button\n                                    onClick={() => handlePrintQr('s24')}\n                                    disabled={!hasSelected}\n                                    icon={<QrcodeOutlined />}\n                                >Qr Code 24x24MM</Button>\n                            </Space>\n                        </Col>\n\n                        <Col md={5} >\n                            <Input.Search placeholder=\"Search\"\n                                onSearch={searchData}\n                            />\n                        </Col>\n                    </Row>\n                    <Table\n                        loading={loading}\n                        rowSelection={rowSelection}\n                        columns={columns}\n                        rowKey={record => record.id}\n                        onChange={handleTableChange}\n                        dataSource={data}\n                        pagination={{\n                            pageSizeOptions: ['20', '50', '100', '200'],\n                            showSizeChanger: true,\n                            showQuickJumper: true,\n                            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                            ...pagination\n                        }}\n                        // size='small'\n                        scroll={{ y: 300, x: 1000 }} />\n                </Space>\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default TableSerialNumber;","import React from 'react'\nimport { Button, Card, Row, Col, Space } from 'antd';\n\nimport {\n    ArrowLeftOutlined,\n} from '@ant-design/icons';\nimport FormMaterialDetail from './FormMaterialDetail';\nimport TableSerialNumber from './TableSerialNumber';\n\nconst FormPage = (props) => {\n    return (\n        <Card>\n            <Row gutter={24}>\n                <Col xs={24} sm={24} lg={10}>\n                    <FormMaterialDetail {...props} />\n                </Col >\n                <Col xs={24} sm={24} lg={14}>\n                    <TableSerialNumber {...props} />\n                </Col >\n            </Row>\n\n            <br />\n            <Space>\n                <Button onClick={() => props.history.goBack()}\n                    icon={<ArrowLeftOutlined />}\n                >Back</Button>\n            </Space>\n        </Card >\n    )\n}\n\nexport default FormPage;"],"sourceRoot":""}